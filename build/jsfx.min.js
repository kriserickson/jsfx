var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},jsfx;!function(t){var e;!function(t){var e=function(){function t(t,e){void 0===t&&(t=null),void 0===e&&(e=null),this.vertexSource=t,this.fragmentSource=e,this.properties={}}return t.prototype.getProperties=function(){return this.properties},t.prototype.drawCanvas=function(t){throw new Error("Must be implemented")},t.prototype.drawWebGL=function(t){var e=t.getShader(this),r=this.getProperties();t.getTexture().use(),t.getNextTexture().drawTo(function(){e.uniforms(r).drawRect()})},t.prototype.getVertexSource=function(){return this.vertexSource},t.prototype.getFragmentSource=function(){return this.fragmentSource},t.clamp=function(t,e,r){return Math.max(t,Math.min(e,r))},t}();t.Filter=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(e){var r=function(e){function r(){e.apply(this,arguments)}return __extends(r,e),r.prototype.drawCanvas=function(t){return r.drawCanvas([this],t)},r.prototype.iterateCanvas=function(t){throw new Error("Must be implemented")},r.drawCanvas=function(e,r){for(var n,i=r.getImageData(),o=0;o<i.data.length;o+=4)n=new t.util.ImageDataHelper(i,o),e.forEach(function(t){t.iterateCanvas(n)}),n.save()},r}(e.Filter);e.IterableFilter=r}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(e){var r=function(){function e(){this.canvas=t.canvas.Renderer.createCanvas(),this.ctx=this.canvas.getContext("2d"),this.source=null,this.imageData=null}return e.prototype.setSource=function(t){return this.source&&this.cleanUp(),this.source=t,this.canvas.width=t.width,this.canvas.height=t.height,this.ctx.drawImage(t.element,0,0,t.width,t.height),this.imageData=this.ctx.getImageData(0,0,t.width,t.height),this},e.prototype.getSource=function(){return this.source},e.prototype.applyFilter=function(t){return t.drawCanvas(this),this},e.prototype.applyFilters=function(e){for(var r,n=[],i=0;i<e.length;i++)r=e[i],r instanceof t.filter.IterableFilter?n.push(r):(n.length>0&&(this.applyFilterStack(n),n=[]),this.applyFilter(r));return n.length>0&&this.applyFilterStack(n),this},e.prototype.render=function(){this.ctx.putImageData(this.imageData,0,0)},e.prototype.getCanvas=function(){return this.canvas},e.prototype.getContext=function(){return this.ctx},e.prototype.getImageData=function(){return this.imageData},e.prototype.setImageData=function(t){this.imageData=t},e.prototype.applyFilterStack=function(e){return t.filter.IterableFilter.drawCanvas(e,this),this},e.prototype.cleanUp=function(){this.imageData=null,this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)},e.createCanvas=function(){return"undefined"!=typeof Buffer&&"undefined"==typeof window?new(require("canvas"))(100,100):document.createElement("canvas")},e}();e.Renderer=r}(e=t.canvas||(t.canvas={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(t){function e(e){t.call(this,null,"\n            uniform sampler2D texture;\n            uniform vec2 delta;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = vec4(0.0);\n                float total = 0.0;\n\n                /* randomize the lookup values to hide the fixed number of samples */\n                //float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n                vec3 scale = vec3(12.9898, 78.233, 151.7182);\n                float offset = fract(sin(dot(gl_FragCoord.xyz + 0.0, scale)) * 43758.5453 + 0.0);\n\n                for (float t = -30.0; t <= 30.0; t++) {\n                    float percent = (t + offset - 0.5) / 30.0;\n                    float weight = 1.0 - abs(percent);\n                    vec4 sample = texture2D(texture, texCoord + delta * percent);\n\n                    /* switch to pre-multiplied alpha to correctly blur transparent images */\n                    sample.rgb *= sample.a;\n\n                    color += sample * weight;\n                    total += weight;\n                }\n\n                gl_FragColor = color / total;\n\n                /* switch back from pre-multiplied alpha */\n                gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n            }\n        "),this.properties.radius=e}return __extends(e,t),e.prototype.drawWebGL=function(t){var e=t.getShader(this),r={delta:[this.properties.radius/t.getSource().width,0]},n={delta:[0,this.properties.radius/t.getSource().height]};t.getTexture().use(),t.getNextTexture().drawTo(function(){e.uniforms(r).drawRect()}),t.getTexture().use(),t.getNextTexture().drawTo(function(){e.uniforms(n).drawRect()})},e.prototype.drawCanvas=function(t){var e,o,a,s,l,u,h,c,f,g,p,x,d,m,v,y,b,w,C,T,F,D,_,S,j,E=t.getImageData(),R=E.data,A=this.properties.radius,I=E.width,M=E.height,U=A+A+1,P=I-1,B=M-1,z=A+1,L=z*(z+1)/2,X=new i,N=X;for(a=1;a<U;a++)N=N.next=new i,a==z&&(j=N);N.next=X;var G=null,k=null;h=u=0;var O=r[A],V=n[A];for(o=0;o<M;o++){for(y=b=w=C=c=f=g=p=0,x=z*(T=R[u]),d=z*(F=R[u+1]),m=z*(D=R[u+2]),v=z*(_=R[u+3]),c+=L*T,f+=L*F,g+=L*D,p+=L*_,N=X,a=0;a<z;a++)N.r=T,N.g=F,N.b=D,N.a=_,N=N.next;for(a=1;a<z;a++)s=u+((P<a?P:a)<<2),c+=(N.r=T=R[s])*(S=z-a),f+=(N.g=F=R[s+1])*S,g+=(N.b=D=R[s+2])*S,p+=(N.a=_=R[s+3])*S,y+=T,b+=F,w+=D,C+=_,N=N.next;for(G=X,k=j,e=0;e<I;e++)R[u+3]=_=p*O>>V,0!=_?(_=255/_,R[u]=(c*O>>V)*_,R[u+1]=(f*O>>V)*_,R[u+2]=(g*O>>V)*_):R[u]=R[u+1]=R[u+2]=0,c-=x,f-=d,g-=m,p-=v,x-=G.r,d-=G.g,m-=G.b,v-=G.a,s=h+((s=e+A+1)<P?s:P)<<2,y+=G.r=R[s],b+=G.g=R[s+1],w+=G.b=R[s+2],C+=G.a=R[s+3],c+=y,f+=b,g+=w,p+=C,G=G.next,x+=T=k.r,d+=F=k.g,m+=D=k.b,v+=_=k.a,y-=T,b-=F,w-=D,C-=_,k=k.next,u+=4;h+=I}for(e=0;e<I;e++){for(b=w=C=y=f=g=p=c=0,u=e<<2,x=z*(T=R[u]),d=z*(F=R[u+1]),m=z*(D=R[u+2]),v=z*(_=R[u+3]),c+=L*T,f+=L*F,g+=L*D,p+=L*_,N=X,a=0;a<z;a++)N.r=T,N.g=F,N.b=D,N.a=_,N=N.next;for(l=I,a=1;a<=A;a++)u=l+e<<2,c+=(N.r=T=R[u])*(S=z-a),f+=(N.g=F=R[u+1])*S,g+=(N.b=D=R[u+2])*S,p+=(N.a=_=R[u+3])*S,y+=T,b+=F,w+=D,C+=_,N=N.next,a<B&&(l+=I);for(u=e,G=X,k=j,o=0;o<M;o++)s=u<<2,R[s+3]=_=p*O>>V,_>0?(_=255/_,R[s]=(c*O>>V)*_,R[s+1]=(f*O>>V)*_,R[s+2]=(g*O>>V)*_):R[s]=R[s+1]=R[s+2]=0,c-=x,f-=d,g-=m,p-=v,x-=G.r,d-=G.g,m-=G.b,v-=G.a,s=e+((s=o+z)<B?s:B)*I<<2,c+=y+=G.r=R[s],f+=b+=G.g=R[s+1],g+=w+=G.b=R[s+2],p+=C+=G.a=R[s+3],G=G.next,x+=T=k.r,d+=F=k.g,m+=D=k.b,v+=_=k.a,y-=T,b-=F,w-=D,C-=_,k=k.next,u+=I}},e}(t.Filter);t.Blur=e;var r=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],n=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],i=function(){function t(){this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}return t}()}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float brightness;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                color.rgb += brightness;\n\n                gl_FragColor = color;\n            }\n        "),this.properties.brightness=t.Filter.clamp(-1,r,1)||0}return __extends(r,e),r.prototype.iterateCanvas=function(t){var e=this.properties.brightness;t.r+=e,t.g+=e,t.b+=e},r}(t.IterableFilter);t.Brightness=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r,n,i,o){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float r;\n            uniform float g;\n            uniform float b;\n            uniform float adj;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                color.r = max(0.0, min(1.0, color.r - ((color.r - r) * adj)));\n                color.g = max(0.0, min(1.0, color.g - ((color.g - g) * adj)));\n                color.b = max(0.0, min(1.0, color.b - ((color.b - b) * adj)));\n\n                gl_FragColor = color;\n            }\n        "),this.properties.r=t.Filter.clamp(0,r/255,1),this.properties.g=t.Filter.clamp(0,n/255,1),this.properties.b=t.Filter.clamp(0,i/255,1),this.properties.adj=t.Filter.clamp(0,o,1)}return __extends(r,e),r.prototype.iterateCanvas=function(t){t.r=Math.min(1,Math.max(0,t.r-(t.r-this.properties.r)*this.properties.adj)),t.g=Math.min(1,Math.max(0,t.g-(t.g-this.properties.g)*this.properties.adj)),t.b=Math.min(1,Math.max(0,t.b-(t.b-this.properties.b)*this.properties.adj))},r}(t.IterableFilter);t.ColorFilter=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r,n,i,o){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform vec2 center;\n            uniform float angle;\n            uniform float scale;\n            uniform vec2 texSize;\n            varying vec2 texCoord;\n\n            float pattern(float angle) {\n                float s = sin(angle), c = cos(angle);\n                vec2 tex = texCoord * texSize - center;\n                vec2 point = vec2(\n                    c * tex.x - s * tex.y,\n                    s * tex.x + c * tex.y\n                ) * scale;\n\n                return (sin(point.x) * sin(point.y)) * 4.0;\n            }\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                vec3 cmy = 1.0 - color.rgb;\n                float k = min(cmy.x, min(cmy.y, cmy.z));\n                cmy = (cmy - k) / (1.0 - k);\n                cmy = clamp(cmy * 10.0 - 3.0 + vec3(pattern(angle + 0.26179), pattern(angle + 1.30899), pattern(angle)), 0.0, 1.0);\n                k = clamp(k * 10.0 - 5.0 + pattern(angle + 0.78539), 0.0, 1.0);\n                gl_FragColor = vec4(1.0 - cmy - k, color.a);\n            }\n        "),this.centerX=r,this.centerY=n,this.properties.angle=t.Filter.clamp(0,i,Math.PI/2),this.properties.scale=Math.PI/o}return __extends(r,e),r.prototype.drawWebGL=function(t){var e=t.getShader(this),r=this.getProperties();r.texSize=[t.getSource().width,t.getSource().width],r.center=[this.centerX,this.centerY],t.getTexture().use(),t.getNextTexture().drawTo(function(){e.uniforms(r).drawRect()})},r.pattern=function(t,e,r,n,i,o){var a=Math.sin(t),s=Math.cos(t),l=e-n,u=r-i;return Math.sin((s*l-a*u)*o)*Math.sin((a*l+s*u)*o)*4},r.prototype.iterateCanvas=function(e){var n=this,i=this.properties.angle,o=e.getImageData(),a=e.getIndex()/4%o.width,s=Math.floor(e.getIndex()/4/o.width),l=function(t){return r.pattern(t,a,s,n.centerX,n.centerY,n.properties.scale)},u=1-e.r,h=1-e.g,c=1-e.b,f=Math.min(u,Math.min(h,c));u=(u-f)/(1-f),h=(h-f)/(1-f),c=(c-f)/(1-f),u=t.Filter.clamp(0,10*u-3+l(i+.26179),1),h=t.Filter.clamp(0,10*h-3+l(i+1.30899),1),c=t.Filter.clamp(0,10*c-3+l(i),1),f=t.Filter.clamp(0,10*f-5+l(i+.78539),1),e.r=1-u-f,e.g=1-h-f,e.b=1-c-f},r}(t.IterableFilter);t.ColorHalfTone=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float contrast;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n\n                if (contrast > 0.0) {\n                    color.rgb = (color.rgb - 0.5) / (1.0 - contrast) + 0.5;\n                } else {\n                    color.rgb = (color.rgb - 0.5) * (1.0 + contrast) + 0.5;\n                }\n\n                gl_FragColor = color;\n            }\n        "),this.properties.contrast=t.Filter.clamp(-1,r,1)||0}return __extends(r,e),r.prototype.iterateCanvas=function(t){var e=this.properties.contrast;e>0?(t.r=(t.r-.5)/(1-e)+.5,t.g=(t.g-.5)/(1-e)+.5,t.b=(t.b-.5)/(1-e)+.5):(t.r=(t.r-.5)*(1+e)+.5,t.g=(t.g-.5)*(1+e)+.5,t.b=(t.b-.5)*(1+e)+.5)},r}(t.IterableFilter);t.Contrast=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(e){var r=function(r){function n(t,e,i){r.call(this,null,"\n            uniform sampler2D texture;\n            uniform sampler2D map;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                color.r = texture2D(map, vec2(color.r)).r;\n                color.g = texture2D(map, vec2(color.g)).g;\n                color.b = texture2D(map, vec2(color.b)).b;\n                gl_FragColor = color;\n            }\n        "),this.red=t,this.green=e,this.blue=i,t=n.splineInterpolate(t),1==arguments.length?e=i=t:(e=n.splineInterpolate(e),i=n.splineInterpolate(i)),this.red=t,this.green=e,this.blue=i}return __extends(n,r),n.prototype.drawWebGL=function(t){for(var e=[],r=0;r<256;r++)e.splice(e.length,0,this.red[r],this.green[r],this.blue[r],255);var n=t.createTexture();n.initFromBytes(256,1,e),n.use(1);var i=t.getShader(this);i.textures({map:1}),t.getTexture().use(),t.getNextTexture().drawTo(function(){i.uniforms({}).drawRect()})},n.prototype.iterateCanvas=function(t){t.getIndex();t.r=this.red[255*t.r]/255,t.g=this.green[255*t.g]/255,t.b=this.blue[255*t.b]/255},n.splineInterpolate=function(r){for(var n=new t.util.SplineInterpolator(r),i=[],o=0;o<256;o++)i.push(e.Filter.clamp(0,Math.floor(256*n.interpolate(o/255)),255));return i},n}(e.IterableFilter);e.Curves=r}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(t){function e(e){t.call(this,null,"\n            uniform sampler2D texture;\n            uniform float exponent;\n            uniform float strength;\n            uniform vec2 texSize;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 center = texture2D(texture, texCoord);\n                vec4 color = vec4(0.0);\n                float total = 0.0;\n\n                for (float x = -4.0; x <= 4.0; x += 1.0) {\n                    for (float y = -4.0; y <= 4.0; y += 1.0) {\n                        vec4 sample = texture2D(texture, texCoord + vec2(x, y) / texSize);\n                        float weight = 1.0 - abs(dot(sample.rgb - center.rgb, vec3(0.25)));\n                        weight = pow(weight, exponent);\n                        color += sample * weight;\n                        total += weight;\n                    }\n                }\n\n                gl_FragColor = color / total;\n            }\n        "),this.properties.exponent=e}return __extends(e,t),e.prototype.drawWebGL=function(t){var e=t.getShader(this),r=this.getProperties();r.texSize=[t.getSource().width,t.getSource().width],t.getTexture().use(),t.getNextTexture().drawTo(function(){e.uniforms(r).drawRect()})},e.prototype.drawCanvas=function(t){var e,r,n,i,o,a,s,l,u,h,c,f=this.properties.exponent,g=t.getImageData(),p=g.data,x=new Uint8ClampedArray(g.data);for(e=0;e<g.width;e++)for(r=0;r<g.height;r++){for(n=4*(r*g.width+e),i=[0,0,0,0],o=0,a=-4;a<=4;a+=1)for(s=-4;s<=4;s+=1)l=Math.min(g.width-1,Math.max(0,e+a)),u=Math.min(g.height-1,Math.max(0,r+s)),h=4*(l+u*g.width),c=Math.pow(1-Math.abs(.25*(x[h]/255-x[n]/255)+.25*(x[h+1]/255-x[n+1]/255)+.25*(x[h+2]/255-x[n+2]/255)),f),i[0]+=x[h]/255*c,i[1]+=x[h+1]/255*c,i[2]+=x[h+2]/255*c,i[3]+=x[h+3]/255*c,o+=c;p[n]=i[0]/o*255,p[n+1]=i[1]/o*255,p[n+2]=i[2]/o*255,p[n+3]=i[3]/o*255}},e}(t.Filter);t.Denoise=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r,n,i,o){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform vec2 center;\n            uniform float angle;\n            uniform float scale;\n            uniform vec2 texSize;\n            varying vec2 texCoord;\n\n            float pattern() {                float s = sin(angle), c = cos(angle);\n                vec2 tex = texCoord * texSize - center;\n                vec2 point = vec2(\n                    c * tex.x - s * tex.y,\n                    s * tex.x + c * tex.y\n                ) * scale;\n\n                return (sin(point.x) * sin(point.y)) * 4.0;\n            }\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                float average = (color.r + color.g + color.b) / 3.0;\n                gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\n            }\n        "),this.centerX=r,this.centerY=n,this.properties.angle=t.Filter.clamp(0,i,Math.PI/2),this.properties.scale=Math.PI/o}return __extends(r,e),r.prototype.drawWebGL=function(t){var e=t.getShader(this),r=this.getProperties();r.texSize=[t.getSource().width,t.getSource().width],r.center=[this.centerX,this.centerY],t.getTexture().use(),t.getNextTexture().drawTo(function(){e.uniforms(r).drawRect()})},r.prototype.iterateCanvas=function(e){var r=e.getImageData(),n=e.getIndex()/4%r.width,i=Math.floor(e.getIndex()/4/r.width),o=(e.r+e.g+e.b)/3,a=t.ColorHalfTone.pattern(this.properties.angle,n,i,this.centerX,this.centerY,this.properties.scale),s=10*o-5+a;e.r=s,e.g=s,e.b=s},r}(t.IterableFilter);t.DotScreen=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(e){var r=function(r){function n(n){r.call(this,null,"\n            uniform sampler2D texture;\n            uniform float hue;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n\n                /* hue adjustment, wolfram alpha: RotationTransform[angle, {1, 1, 1}][{x, y, z}] */\n                float angle = hue * 3.14159265;\n                float s = sin(angle), c = cos(angle);\n                vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\n                color.rgb = vec3(\n                    dot(color.rgb, weights.xyz),\n                    dot(color.rgb, weights.zxy),\n                    dot(color.rgb, weights.yzx)\n                );\n\n                gl_FragColor = color;\n            }\n        "),this.properties.hue=e.Filter.clamp(-1,n,1)||0;var i=3.14159265*n,o=Math.sin(i),a=Math.cos(i);this.weights=new t.util.Vector3(2*a,-Math.sqrt(3)*o-a,Math.sqrt(3)*o-a).addScalar(1).divideScalar(3)}return __extends(n,r),n.prototype.iterateCanvas=function(t){var e=t.toVector3();t.r=e.dot(this.weights),t.g=e.dotScalars(this.weights.z,this.weights.x,this.weights.y),t.b=e.dotScalars(this.weights.y,this.weights.z,this.weights.x)},n}(e.IterableFilter);e.Hue=r}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r,n,i){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float r;\n            uniform float g;\n            uniform float b;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                color.r = min(1.0, color.r * r);\n                color.g = min(1.0, color.g * g);\n                color.b = min(1.0, color.b * b);\n\n                gl_FragColor = color;\n            }\n        "),this.properties.r=t.Filter.clamp(0,r,2),this.properties.g=t.Filter.clamp(0,n,2),this.properties.b=t.Filter.clamp(0,i,2)}return __extends(r,e),r.prototype.iterateCanvas=function(t){t.r*=this.properties.r,t.g*=this.properties.g,t.b*=this.properties.b},r}(t.IterableFilter);t.Multiply=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(e){var r=function(r){function n(t){r.call(this,null,"\n            uniform sampler2D texture;\n            uniform float amount;\n            varying vec2 texCoord;\n\n            float rand(vec2 co) {\n                return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n            }\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n\n                float diff = (rand(texCoord) - 0.5) * amount;\n                color.r += diff;\n                color.g += diff;\n                color.b += diff;\n\n                gl_FragColor = color;\n            }\n        "),this.properties.amount=e.Filter.clamp(0,t,1)}return __extends(n,r),n.prototype.iterateCanvas=function(e){var r=this.properties.amount,i=e.getImageData().width,o=e.getIndex()/4%i,a=Math.floor(e.getIndex()/4/i),s=new t.util.Vector2(o,a),l=(n.rand(s)-.5)*r;e.r+=l,e.g+=l,e.b+=l},n.rand=function(t){return n.fract(43758.5453*Math.sin(t.dotScalars(12.9898,78.233)))},n.fract=function(t){return t-Math.floor(t)},n}(e.IterableFilter);e.Noise=r}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float saturation;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n\n                float average = (color.r + color.g + color.b) / 3.0;\n                if (saturation > 0.0) {\n                    color.rgb += (average - color.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n                } else {\n                    color.rgb += (average - color.rgb) * (-saturation);\n                }\n\n                gl_FragColor = color;\n            }\n        "),this.properties.saturation=t.Filter.clamp(-1,r,1)||0}return __extends(r,e),r.prototype.iterateCanvas=function(t){var e=this.properties.saturation,r=(t.r+t.g+t.b)/3;e>0?(t.r+=(r-t.r)*(1-1/(1.001-e)),t.g+=(r-t.g)*(1-1/(1.001-e)),t.b+=(r-t.b)*(1-1/(1.001-e))):(t.r+=(r-t.r)*-e,t.g+=(r-t.g)*-e,t.b+=(r-t.b)*-e)},r}(t.IterableFilter);t.Saturation=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float amount;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                float r = color.r;\n                float g = color.g;\n                float b = color.b;\n\n                color.r = min(1.0, (r * (1.0 - (0.607 * amount))) + (g * (0.769 * amount)) + (b * (0.189 * amount)));\n                color.g = min(1.0, (r * 0.349 * amount) + (g * (1.0 - (0.314 * amount))) + (b * 0.168 * amount));\n                color.b = min(1.0, (r * 0.272 * amount) + (g * 0.534 * amount) + (b * (1.0 - (0.869 * amount))));\n\n                gl_FragColor = color;\n            }\n        "),this.properties.amount=t.Filter.clamp(-1,r,1)||0}return __extends(r,e),r.prototype.iterateCanvas=function(t){var e=t.r,r=t.g,n=t.b,i=this.properties.amount;t.r=Math.min(1,e*(1-.607*i)+r*(.769*i)+n*(.189*i)),t.g=Math.min(1,.349*e*i+r*(1-.314*i)+.168*n*i),t.b=Math.min(1,.272*e*i+.534*r*i+n*(1-.869*i))},r}(t.IterableFilter);t.Sepia=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(e){var r=function(r){function n(t,e){r.call(this,null,"\n            uniform sampler2D blurredTexture;\n            uniform sampler2D originalTexture;\n            uniform float strength;\n            uniform float threshold;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 blurred = texture2D(blurredTexture, texCoord);\n                vec4 original = texture2D(originalTexture, texCoord);\n                gl_FragColor = mix(blurred, original, 1.0 + strength);\n            }\n        "),this.properties.radius=t,this.properties.strength=e}return __extends(n,r),n.prototype.drawWebGL=function(t){var r=t.getShader(this),n=this.properties.radius,i=this.properties.strength,o=t.createTexture();t.getTexture().use(),o.drawTo(t.getDefaultShader().drawRect.bind(t.getDefaultShader())),o.use(1);var a=new e.Blur(n);a.drawWebGL(t),r.textures({originalTexture:1}),t.getTexture().use(),t.getNextTexture().drawTo(function(){r.uniforms({strength:i}).drawRect()}),o.unuse(1)},n.prototype.drawCanvas=function(r){var n=new Uint8ClampedArray(r.getImageData().data),i=this.properties.radius,o=this.properties.strength+1,a=new e.Blur(i);a.drawCanvas(r);for(var s=r.getImageData(),l=s.data,u=0;u<l.length;u+=4)l[u]=t.util.ImageDataHelper.mix(l[u],n[u],o),l[u+1]=t.util.ImageDataHelper.mix(l[u+1],n[u+1],o),l[u+2]=t.util.ImageDataHelper.mix(l[u+2],n[u+2],o);r.setImageData(s)},n}(e.Filter);e.UnsharpMask=r}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float amount;\n            varying vec2 texCoord;\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n                float average = (color.r + color.g + color.b) / 3.0;\n                float mx = max(color.r, max(color.g, color.b));\n                float amt = (mx - average) * (-amount * 3.0);\n                color.rgb = mix(color.rgb, vec3(mx), amt);\n                gl_FragColor = color;\n            }\n        "),this.properties.amount=t.Filter.clamp(-1,r,1)}return __extends(r,e),r.prototype.iterateCanvas=function(t){var e=this.properties.amount,r=(t.r+t.g+t.b)/3,n=Math.max(t.r,Math.max(t.g,t.b));t.mix(n,n,n,(n-r)*(3*-e))},r}(t.IterableFilter);t.Vibrance=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(e){function r(r,n){e.call(this,null,"\n            uniform sampler2D texture;\n            uniform float size;\n            uniform float amount;\n            varying vec2 texCoord;\n\n            void main() {\n                vec4 color = texture2D(texture, texCoord);\n\n                float dist = distance(texCoord, vec2(0.5, 0.5));\n                color.rgb *= smoothstep(0.8, size * 0.799, dist * (amount + size));\n\n                gl_FragColor = color;\n            }\n        "),this.properties.size=t.Filter.clamp(0,r,1),this.properties.amount=t.Filter.clamp(0,n,1)}return __extends(r,e),r.prototype.iterateCanvas=function(t){var e=this.properties.size,n=this.properties.amount,i=t.getImageData(),o=t.getIndex()/4%i.width,a=Math.floor(t.getIndex()/4/i.width),s=r.distance(o/i.width,a/i.height,.5,.5);n=r.smoothstep(.8,.799*e,s*(n+e)),t.r*=n,t.g*=n,t.b*=n},r.distance=function(t,e,r,n){return Math.sqrt(Math.pow(t-r,2)+Math.pow(e-n,2))},r.smoothstep=function(t,e,r){var n=Math.max(0,Math.min(1,(r-t)/(e-t)));return n*n*(3-2*n)},r}(t.IterableFilter);t.Vignette=e}(e=t.filter||(t.filter={}))}(jsfx||(jsfx={}));var jsfx;!function(t){function e(e,n){return void 0===e&&(e=""),void 0===n&&(n="highp"),0===e.length&&(e=r?"webgl":"canvas"),"webgl"===e?new t.webgl.Renderer(n):new t.canvas.Renderer}var r=function(){try{var t=document.createElement("canvas");return!(!t.getContext("webgl")&&!t.getContext("experimental-webgl"))}catch(e){return!1}}();t.Renderer=e}(jsfx||(jsfx={}));var jsfx;!function(t){var e=function(){function t(t){this.element=t}return Object.defineProperty(t.prototype,"width",{get:function(){return this.element.width},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.element.height},enumerable:!0,configurable:!0}),t}();t.Source=e}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(e){var r=function(){function e(t,e){this.imageData=t,this.index=e,this.r=this.imageData.data[e]/255,this.g=this.imageData.data[e+1]/255,this.b=this.imageData.data[e+2]/255,this.a=this.imageData.data[e+3]/255}return e.prototype.getImageData=function(){return this.imageData},e.prototype.getIndex=function(){return this.index},e.prototype.save=function(){this.imageData.data[this.index]=255*this.r,this.imageData.data[this.index+1]=255*this.g,this.imageData.data[this.index+2]=255*this.b,this.imageData.data[this.index+3]=255*this.a},e.prototype.toVector3=function(){return new t.util.Vector3(this.r,this.g,this.b)},e.prototype.fromVector3=function(t){this.r=t.x,this.g=t.y,this.b=t.z},e.prototype.mix=function(t,r,n,i){this.r=e.mix(this.r,t,i),this.g=e.mix(this.g,r,i),this.b=e.mix(this.b,n,i)},e.mix=function(t,e,r){return t*(1-r)+e*r},e}();e.ImageDataHelper=r}(e=t.util||(t.util={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(){function t(t){this.points=t;var e,r=t.length;for(this.xa=[],this.ya=[],this.u=[],this.y2=[],t.sort(function(t,e){return t[0]-e[0]}),e=0;e<r;e++)this.xa.push(t[e][0]),this.ya.push(t[e][1]);for(this.u[0]=0,this.y2[0]=0,e=1;e<r-1;++e){var n=this.xa[e+1]-this.xa[e-1],i=(this.xa[e]-this.xa[e-1])/n,o=i*this.y2[e-1]+2;this.y2[e]=(i-1)/o;var a=(this.ya[e+1]-this.ya[e])/(this.xa[e+1]-this.xa[e])-(this.ya[e]-this.ya[e-1])/(this.xa[e]-this.xa[e-1]);this.u[e]=(6*a/n-i*this.u[e-1])/o}for(this.y2[r-1]=0,e=r-2;e>=0;--e)this.y2[e]=this.y2[e]*this.y2[e+1]+this.u[e]}return t.prototype.interpolate=function(t){for(var e=this.ya.length,r=0,n=e-1;n-r>1;){var i=n+r>>1;this.xa[i]>t?n=i:r=i}var o=this.xa[n]-this.xa[r],a=(this.xa[n]-t)/o,s=(t-this.xa[r])/o;return a*this.ya[r]+s*this.ya[n]+((a*a*a-a)*this.y2[r]+(s*s*s-s)*this.y2[n])*(o*o)/6},t}();t.SplineInterpolator=e}(e=t.util||(t.util={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.dotScalars=function(t,e){return this.x*t+this.y*e},t}();t.Vector2=e}(e=t.util||(t.util={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(){function t(t,e,r){this.x=t,this.y=e,this.z=r}return t.prototype.addScalar=function(t){return this.x+=t,this.y+=t,this.z+=t,this},t.prototype.multiplyScalar=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.prototype.divideScalar=function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return this},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},t.prototype.dotScalars=function(t,e,r){return this.x*t+this.y*e+this.z*r},t}();t.Vector3=e}(e=t.util||(t.util={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(){function e(t){this.precision=t,this.canvas=document.createElement("canvas");var e={premultipliedAlpha:!1};this.gl=this.canvas.getContext("webgl",e)||this.canvas.getContext("experimental-webgl",e),this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),this.source=null,this.sourceTexture=null,this.textures=null,this.currentTexture=0,this.gl.shaderCache={}}return e.prototype.setSource=function(e){return this.source&&this.cleanUp(),this.source=e,
this.sourceTexture=t.Texture.fromElement(this.gl,e.element),this.initialize(),this.sourceTexture.use(),this.getTexture().drawTo(this.getDefaultShader().drawRect.bind(this.getDefaultShader())),this},e.prototype.getSource=function(){return this.source},e.prototype.applyFilter=function(t){return t.drawWebGL(this),this},e.prototype.applyFilters=function(t){var e=this;return t.forEach(function(t){t.drawWebGL(e)}),this},e.prototype.render=function(){this.getTexture().use(),this.getFlippedShader().drawRect()},e.prototype.getCanvas=function(){return this.canvas},e.prototype.getTexture=function(){return this.textures[this.currentTexture%2]},e.prototype.getNextTexture=function(){return this.textures[++this.currentTexture%2]},e.prototype.createTexture=function(){return new t.Texture(this.gl,this.source.width,this.source.height,this.gl.RGBA,this.gl.UNSIGNED_BYTE)},e.prototype.getShader=function(e){var r=e.getVertexSource()+e.getFragmentSource();return this.gl.shaderCache.hasOwnProperty(r)?this.gl.shaderCache[r]:new t.Shader(this.gl,e.getVertexSource(),e.getFragmentSource(),this.precision)},e.prototype.getDefaultShader=function(){return this.gl.shaderCache.def||(this.gl.shaderCache.def=new t.Shader(this.gl,null,null,this.precision)),this.gl.shaderCache.def},e.prototype.getFlippedShader=function(){return this.gl.shaderCache.flipped||(this.gl.shaderCache.flipped=new t.Shader(this.gl,null,"\n                uniform sampler2D texture;\n                varying vec2 texCoord;\n\n                void main() {\n                    gl_FragColor = texture2D(texture, vec2(texCoord.x, 1.0 - texCoord.y));\n                }\n            ",this.precision)),this.gl.shaderCache.flipped},e.prototype.initialize=function(){this.canvas.width=this.source.width,this.canvas.height=this.source.height;for(var t=[],e=0;e<2;e++)t.push(this.createTexture());this.textures=t},e.prototype.cleanUp=function(){this.sourceTexture.destroy();for(var t=0;t<2;t++)this.textures[t].destroy();this.textures=null},e}();t.Renderer=e}(e=t.webgl||(t.webgl={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){function e(t,e,r){var n=t.createShader(e);if(t.shaderSource(n,r),t.compileShader(n),!t.getShaderParameter(n,t.COMPILE_STATUS))throw"compile error: "+t.getShaderInfoLog(n);return n}function r(t){return"[object Array]"===Object.prototype.toString.call(t)}function n(t){return"[object Number]"===Object.prototype.toString.call(t)}var i=function(){function t(r,n,i,o){if(this.gl=r,this.vertexSource=n||t.defaultVertexSource,this.fragmentSource=i||t.defaultFragmentSource,this.fragmentSource="precision "+o+" float;"+this.fragmentSource,this.vertexAttribute=null,this.texCoordAttribute=null,this.program=r.createProgram(),r.attachShader(this.program,e(r,r.VERTEX_SHADER,this.vertexSource)),r.attachShader(this.program,e(r,r.FRAGMENT_SHADER,this.fragmentSource)),r.linkProgram(this.program),!r.getProgramParameter(this.program,r.LINK_STATUS))throw"link error: "+r.getProgramInfoLog(this.program)}return t.prototype.textures=function(t){this.gl.useProgram(this.program);for(var e in t)t.hasOwnProperty(e)&&this.gl.uniform1i(this.gl.getUniformLocation(this.program,e),t[e]);return this},t.prototype.uniforms=function(t){this.gl.useProgram(this.program);for(var e in t)if(t.hasOwnProperty(e)){var i=this.gl.getUniformLocation(this.program,e);if(null!==i){var o=t[e];if(r(o))switch(o.length){case 1:this.gl.uniform1fv(i,new Float32Array(o));break;case 2:this.gl.uniform2fv(i,new Float32Array(o));break;case 3:this.gl.uniform3fv(i,new Float32Array(o));break;case 4:this.gl.uniform4fv(i,new Float32Array(o));break;case 9:this.gl.uniformMatrix3fv(i,!1,new Float32Array(o));break;case 16:this.gl.uniformMatrix4fv(i,!1,new Float32Array(o));break;default:throw"dont't know how to load uniform \""+e+'" of length '+o.length}else{if(!n(o))throw'attempted to set uniform "'+e+'" to invalid value '+(o||"undefined").toString();this.gl.uniform1f(i,o)}}}return this},t.prototype.drawRect=function(t,e,r,n){var i=this.gl.getParameter(this.gl.VIEWPORT);e=void 0!==e?(e-i[1])/i[3]:0,t=void 0!==t?(t-i[0])/i[2]:0,r=void 0!==r?(r-i[0])/i[2]:1,n=void 0!==n?(n-i[1])/i[3]:1,this.gl.vertexBuffer||(this.gl.vertexBuffer=this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.gl.vertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([t,e,t,n,r,e,r,n]),this.gl.STATIC_DRAW),this.gl.texCoordBuffer||(this.gl.texCoordBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.gl.texCoordBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,1]),this.gl.STATIC_DRAW)),null==this.vertexAttribute&&(this.vertexAttribute=this.gl.getAttribLocation(this.program,"vertex"),this.gl.enableVertexAttribArray(this.vertexAttribute)),null==this.texCoordAttribute&&(this.texCoordAttribute=this.gl.getAttribLocation(this.program,"_texCoord"),this.gl.enableVertexAttribArray(this.texCoordAttribute)),this.gl.useProgram(this.program),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.gl.vertexBuffer),this.gl.vertexAttribPointer(this.vertexAttribute,2,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.gl.texCoordBuffer),this.gl.vertexAttribPointer(this.texCoordAttribute,2,this.gl.FLOAT,!1,0,0),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)},t.prototype.destroy=function(){this.gl.deleteProgram(this.program),this.program=null},t.defaultVertexSource="\nattribute vec2 vertex;\nattribute vec2 _texCoord;\nvarying vec2 texCoord;\n\nvoid main() {\n    texCoord = _texCoord;\n    gl_Position = vec4(vertex * 2.0 - 1.0, 0.0, 1.0);\n}",t.defaultFragmentSource="\nuniform sampler2D texture;\nvarying vec2 texCoord;\n\nvoid main() {\n    gl_FragColor = texture2D(texture, texCoord);\n}",t}();t.Shader=i}(e=t.webgl||(t.webgl={}))}(jsfx||(jsfx={}));var jsfx;!function(t){var e;!function(t){var e=function(){function t(t,e,r,n,i){void 0===n&&(n=t.RGBA),void 0===i&&(i=t.UNSIGNED_BYTE),this.gl=t,this.width=e,this.height=r,this.format=n,this.type=i,this.id=t.createTexture(),this.element=null,t.bindTexture(t.TEXTURE_2D,this.id),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),e&&r&&t.texImage2D(t.TEXTURE_2D,0,this.format,e,r,0,this.format,this.type,null)}return t.prototype.loadContentsOf=function(t){this.element=t,this.width=t.width,this.height=t.height,this.gl.bindTexture(this.gl.TEXTURE_2D,this.id),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.format,this.format,this.type,t)},t.prototype.initFromBytes=function(t,e,r){this.width=t,this.height=e,this.format=this.gl.RGBA,this.type=this.gl.UNSIGNED_BYTE,this.gl.bindTexture(this.gl.TEXTURE_2D,this.id),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.type,new Uint8Array(r))},t.prototype.use=function(t){this.gl.activeTexture(this.gl.TEXTURE0+(t||0)),this.gl.bindTexture(this.gl.TEXTURE_2D,this.id)},t.prototype.unuse=function(t){this.gl.activeTexture(this.gl.TEXTURE0+(t||0)),this.gl.bindTexture(this.gl.TEXTURE_2D,null)},t.prototype.drawTo=function(t){if(this.gl.frameBuffer=this.gl.frameBuffer||this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.gl.frameBuffer),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.id,0),this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER)!==this.gl.FRAMEBUFFER_COMPLETE)throw new Error("incomplete framebuffer");this.gl.viewport(0,0,this.width,this.height),t(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)},t.prototype.destroy=function(){this.gl.deleteTexture(this.id),this.id=null},t.fromElement=function(e,r){var n=new t(e,0,0);return n.loadContentsOf(r),n},t}();t.Texture=e}(e=t.webgl||(t.webgl={}))}(jsfx||(jsfx={})),"undefined"!=typeof module&&(module.exports=jsfx);